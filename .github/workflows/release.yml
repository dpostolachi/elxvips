name: Build precompiled NIFs

env:
  NIF_DIRECTORY: "native/lvips"

on:
  push:
    branches:
      - prebuild
    tags:
      - '*'

defaults:
  run:
    # Sets the working dir for "run" scripts.
    # Note that this won't change the directory for actions (tasks with "uses").
    working-directory: "./native/lvips"

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.16"]
        job:
          # - { target: arm-unknown-linux-gnueabihf , os: ubuntu-20.04 ,  use-cross: true,    rustcflags: "",                                 flagname: "UNKNOWN" }
          # - { target: aarch64-unknown-linux-gnu   , os: ubuntu-22.04 ,  use-cross: true,    rustcflags: "-C target-feature=-crt-static",    flagname: "CARGO_TARGET_UNKNOWN_LINUX_MUSL_RUSTFLAGS" }
          - { target: aarch64-apple-darwin        , os: macos-11     ,  use-cross: false,    rustcflags: "",                                 flagname: "UNKNOWN" }
          - { target: x86_64-apple-darwin         , os: macos-11     ,  use-cross: false,    rustcflags: "",                                 flagname: "UNKNOWN"}
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-20.04 ,  use-cross: false,    rustcflags: "",                                 flagname: "UNKNOWN"}
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-22.04 ,  use-cross: false,    rustcflags: "-C target-feature=-crt-static",    flagname: "CARGO_TARGET_UNKNOWN_LINUX_MUSL_RUSTFLAGS" }
          # - { target: x86_64-pc-windows-gnu       , os: windows-2019 ,                      rustcflags: "",                                 flagname: "UNKNOWN" }
          # - { target: x86_64-pc-windows-msvc      , os: windows-2019 ,                      rustcflags: "",                                 flagname: "UNKNOWN" }

    env:
      RUSTLER_NIF_VERSION: ${{ matrix.nif }}
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Extract project version
      shell: bash
      run: |
        # Get the project version from mix.exs
        echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV
        export ${{ matrix.job.flagname }}="${{ matrix.job.rustcflags }}"
        echo $CARGO_TARGET_UNKNOWN_LINUX_MUSL_RUSTFLAGS

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}

    - name: Install dependencies
      shell: bash
      run: |
        brew install vips || echo 1
        sudo apt-get install libvips-dev || echo 1

    - name: Build the project
      id: build-crate
      uses: dpostolachi/rustler-precompiled-action@main
      with:
        project-name: lvips
        cross-version: "v0.2.5"
        project-version: ${{ env.PROJECT_VERSION }}
        target: ${{ matrix.job.target }}
        nif-version: ${{ matrix.nif }}
        use-cross: ${{ matrix.job.use-cross }}
        project-dir: "native/lvips"

    - name: Artifact upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.build-crate.outputs.file-name }}
        path: ${{ steps.build-crate.outputs.file-path }}

    - name: Publish archives and packages
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.build-crate.outputs.file-path }}
      if: startsWith(github.ref, 'refs/tags/')
